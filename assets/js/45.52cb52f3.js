(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{451:function(t,r,s){"use strict";s.r(r);var e=s(56),a=Object(e.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" Typescript")]),t._v(" "),s("h2",{attrs:{id:"_1-1-왜-타입스크립트인가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-왜-타입스크립트인가"}},[t._v("#")]),t._v(" 1.1 왜 타입스크립트인가")]),t._v(" "),s("p",[t._v("타입스크립트는 자바스크립트로 트랜스파일해야 브라우저나 자바스크립트 엔진에서 실행됩니다.")]),t._v(" "),s("p",[t._v("트랜스파일은 타입스크립트 코드를 자바스크립트로 바꾸는 것과 같이 한 언어의 소스코드를 비슷한 추상화 수준의 다른 언어로 변환하는 것이며, 컴파일은 C언어를 기계어로 변경할 때와 같이 추상화 수준의 언어로 변환하는 것을 말합니다.")]),t._v(" "),s("p",[t._v("타입스크립트는 자바스크립트의 상위 집합으로 모든 ECMA버전의 자바스크립트 파일을 사용할 수 있습니다. 예를 들어 myProgram.js 파일 확장명을 .js 에서 .ts 로 변경하면 타입스크립트 파일이 됩니다.")]),t._v(" "),s("p",[t._v("타입스크립트는 정적 타이핑을 지원한다. 정적 타입 프로그래밍 언어는 변수를 사용하기 전에 타입을 반드시 할당해야합니다. 타입스크립트는 변수의 타입을 선언한 후 이를 다른 타입으로 바꾸게 되면 컴파일 오류가 발생합니다. 자바스크립트는 프로그램이 실행중인 런타임에서도 변수 타입에 대해 알지 못하기 때문에, 변수 타입을 변경할 수 있습니다.")]),t._v(" "),s("p",[t._v("타입스크립트는 최신 ECMA 스크립트를 반영하며 , 타입, 인터페이스, 데코레이터, 클래스변수, 제네릭, 열거타입, public, protected, private 키워드가 추가된 언어입니다.")]),t._v(" "),s("p",[t._v("타입스크립트는 자바스크립트의 상위 집합 언어입니다. 타입스크립트로 작성한 프로그램은 자바스크립트로 트랜스파일 해야 브라우저나 자바스크립트 엔진에서 실행할 수 있습니다.\n타입스크립트에서 발생하는 오류는 정적 코드 분석기가 입력하는 즉시 찾아낼 수 있습니다.")]),t._v(" "),s("p",[t._v("타입스크립트는 정적 타입 언어가 가진 장점을 가지고 있습니다. 원한다면 오랫동안 익숙했던 동적 자바스크립트 오브젝트도 사용할 수 있습니다.")])])}),[],!1,null,null,null);r.default=a.exports}}]);